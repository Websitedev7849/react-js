{"version":3,"sources":["ThemeToggle.js","Navbar.js","AddTask.js","assets/bin.svg","Task.js","AddTaskWindow.js","App.js","index.js"],"names":["ThemeToggle","theme","useTheme","useState","toggled","useToggled","className","htmlFor","type","id","onClick","Navbar","fill","useFill","setSearchWord","useEffect","xmlns","viewBox","width","height","stroke","strokeMiterlimit","strokeWidth","d","strokeLinecap","onChange","e","target","value","placeholder","AddTask","to","Task","tasks","DeleteTask","searchWords","window","location","hostname","deleteBtn","filteredTask","filter","task","undefined","taskBody","includes","taskCreatedDate","filterTaskFunc","map","index","style","background","bgColor","src","alt","AddTaskWindow","useTasks","date","setDate","text","setText","individualTask","history","useHistory","bgColors","action","onSubmit","preventDefault","Date","getTime","Math","floor","random","length","push","name","cols","rows","App","exact","path","newTasks","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.a22f3497.chunk.js","sourcesContent":["import { useState } from \"react\";\r\n\r\nconst ThemeToggle = ({theme, useTheme}) => {\r\n\r\n    const [toggled, useToggled] = useState(\"\");\r\n\r\n    const HandleClick = () => {\r\n\r\n        // callback returns value based on theme variable.\r\n        useToggled(() => {\r\n            if (toggled === \"toggled\") \r\n                return \"\"\r\n            return \"toggled\"\r\n        });\r\n\r\n        useTheme(() => {\r\n            if (theme === \"light-theme\")\r\n                return \"dark-theme\";\r\n            return \"light-theme\";\r\n        });\r\n    }\r\n\r\n    return (\r\n        <div className=\"theme-toggle-container\">\r\n            <label htmlFor=\"toggle-theme-btn\" className=\"label-toggle\">\r\n                <div className=\"circle-container\">\r\n                    <div className={`circle ${toggled}`}></div>\r\n                </div>\r\n            </label>\r\n            <input type=\"checkbox\" id=\"toggle-theme-btn\" onClick={HandleClick} />\r\n        </div>\r\n    );\r\n}\r\n \r\nexport default ThemeToggle;\r\n","import { useEffect } from \"react\";\r\nimport ThemeToggle from \"./ThemeToggle\";\r\n\r\nconst Navbar = ({fill, theme, useFill, setSearchWord, useTheme}) => {\r\n\r\n    \r\n\r\n    // this callback is to work around react hooks rules\r\n    const Callback = () => {\r\n        useFill( () => {\r\n            if (theme === \"light-theme\") {\r\n                return \"#000000\";\r\n            }\r\n            return \"#ffffff\"\r\n        });\r\n    }\r\n    \r\n    useEffect(() => {\r\n        Callback();\r\n    })\r\n\r\n    return (\r\n     <nav className=\"navbar\">\r\n        <div className=\"search-bar\">\r\n            \r\n            <svg fill={fill} xmlns=\"http://www.w3.org/2000/svg\"  viewBox=\"0 0 30 30\" width=\"30px\" height=\"30px\"><path fill=\"none\" stroke={fill} strokeMiterlimit=\"10\" strokeWidth=\"2\" d=\"M13 4A9 9 0 1 0 13 22A9 9 0 1 0 13 4Z\"/><path fill=\"none\" stroke={fill} strokeLinecap=\"round\" strokeMiterlimit=\"10\" strokeWidth=\"2\" d=\"M26 26L19.437 19.437\"/></svg>\r\n\r\n            <input className=\"search\" type=\"text\" onChange={e => setSearchWord(e.target.value)} placeholder=\"Search by Text, Date...\" />\r\n\r\n            <ThemeToggle theme={theme} useTheme={useTheme}/>\r\n        </div>\r\n        <h1 className=\"Notes\">Notes</h1>\r\n     </nav>\r\n    );\r\n}\r\n \r\nexport default Navbar;","import { Link } from \"react-router-dom\";\r\nconst AddTask = () => {\r\n\r\n    return (\r\n        <Link className=\"add-task\" to=\"/addTaskWindow\">+</Link>\r\n    );\r\n}\r\n \r\nexport default AddTask;","export default __webpack_public_path__ + \"static/media/bin.5d614aef.svg\";","import { useEffect } from \"react\";\r\nimport deleteBtn from \"./assets/bin.svg\";\r\n\r\nconst Task = ({ tasks, DeleteTask, searchWords}) => {\r\n\r\n    const filterTaskFunc = (task) => {\r\n        if(searchWords === \"\" || searchWords === undefined)\r\n          return true;\r\n        return task.taskBody.includes(searchWords) || task.taskCreatedDate.includes(searchWords);\r\n    };\r\n\r\n    useEffect(() => {\r\n        \r\n        // solve bug of github\r\n        if (window.location.hostname === \"websitedev7849.github.io\") { \r\n            deleteBtn = \"react-js/static/media/bin.5d614aef.svg\";\r\n        }\r\n        \r\n    }, []);\r\n\r\n    let filteredTask = tasks.filter(task => filterTaskFunc(task));\r\n\r\n    return (\r\n        <div className=\"task-container\">\r\n            {filteredTask.map((task, index) => (\r\n                <div className=\"task-card\" key={index} style = {{background: task.bgColor}}>\r\n                    <p className=\"task-body\">{ task.taskBody }</p>\r\n                    <p className=\"task-date\">{ task.taskCreatedDate }</p>\r\n                    <button className=\"delete-btn\" type=\"button\" onClick = {() => DeleteTask(task.id)}>\r\n                        <img src={deleteBtn} alt=\"edit button\"/>\r\n                    </button>\r\n                </div>\r\n            ))}\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default Task;","import { useState } from \"react\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nconst AddTaskWindow = ({tasks, useTasks}) => {\r\n\r\n    let [date, setDate] = useState('');\r\n    let [text, setText] = useState(''); \r\n    let individualTask = {};\r\n\r\n    // hook to redirect to home page without reloading the app\r\n    const history = useHistory();\r\n\r\n    let bgColors = [\"#eb826f\", \"#bff195\", \"#9759e9\", \"#e95984\", \"#eb8876\", \"#7691eb\", \"#7876eb\"];\r\n\r\n    const HandleSubmit = e => {\r\n        e.preventDefault();\r\n        individualTask.id = new Date().getTime();\r\n        individualTask.taskBody = text;\r\n        individualTask.taskCreatedDate = date;\r\n        individualTask.bgColor = bgColors[Math.floor(Math.random() * bgColors.length)];\r\n        tasks.push(individualTask);\r\n        useTasks(tasks);\r\n    \r\n        //redirecting to homepage \"/\"\r\n        history.push(\"/\");\r\n    };\r\n\r\n    return (\r\n        <section className=\"add-task-window\">\r\n            <h1 className=\"form-header\">ADD A TASK</h1>\r\n            <form action=\"#\" className=\"form-add-task\" onSubmit = {HandleSubmit}>\r\n                <div className=\"task-date-container\">\r\n                    <label htmlFor=\"task-date\">Date</label> <br />\r\n                    <input type=\"date\" name=\"task-date\" onChange={(e) => { setDate(e.target.value) }}/>\r\n                </div>\r\n                <div className=\"text-area\">\r\n                    <label htmlFor=\"textarea\">Your Message</label> <br />\r\n                    <textarea name=\"textarea\"\r\n                    cols=\"65\" \r\n                    rows=\"10\"\r\n                    placeholder=\"Enter you Message here\"\r\n                    onChange={(e) => { setText(e.target.value) }}></textarea>\r\n                </div>\r\n                <Link className=\"form-cancel-btn\" to=\"/\">Cancel</Link>\r\n                <button className=\"form-submit-btn\" type=\"submit\">Add Task</button>\r\n            </form>\r\n        </section>\r\n    );\r\n}\r\n \r\nexport default AddTaskWindow;","import { useState } from 'react';\r\nimport {BrowserRouter as Router, Route, Switch} from 'react-router-dom'\r\nimport  Navbar  from \"./Navbar\";\r\nimport AddTask from \"./AddTask\";\r\nimport Task from \"./Task\";\r\nimport AddTaskWindow from './AddTaskWindow';\r\n\r\nfunction App() {\r\n  \r\n  // TODO create custom Toggle button in ThemeToggle.js\r\n  \r\n  let [tasks, useTasks] = useState([]);\r\n\r\n  const DeleteTask = (id) => {\r\n    const newTasks = tasks.filter((task, index) => task.id !== id);\r\n    useTasks(newTasks);\r\n  };\r\n\r\n  // Search words from navigation bar\r\n  let [searchWords, setSearchWord] = useState(\"\");\r\n\r\n  let [theme, useTheme] = useState(\"light-theme\");\r\n  \r\n   // change the fill(style) of search.svg in Navbar component\r\n   let [fill, useFill] = useState(\"#000000\");\r\n \r\n  \r\n  return (\r\n    <Router>\r\n      <div className={`App ${theme}`}>\r\n\r\n        <section className=\"main\">\r\n          <Navbar fill={fill} theme={theme} useFill={useFill} setSearchWord = {setSearchWord} useTheme = {useTheme} />\r\n\r\n            <Switch>\r\n              \r\n              <Route exact path=\"/\">\r\n                <Task tasks={tasks} DeleteTask={ DeleteTask } searchWords={searchWords}/>\r\n              </Route>\r\n\r\n              <Route exact path=\"/addTaskWindow\">\r\n                <AddTaskWindow tasks={tasks} useTasks={useTasks} />\r\n              </Route>\r\n\r\n            </Switch>\r\n\r\n            {/* Add task button */}\r\n            <AddTask/> \r\n          \r\n        </section>\r\n      </div>\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\n\r\nReactDOM.render(\r\n  <App />,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}